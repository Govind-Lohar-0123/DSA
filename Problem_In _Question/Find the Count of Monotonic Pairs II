class Solution {     
public:
   
    int dp[2001][1001];
    int mod=1000000007;
    int solve(int idx,vector<int>&nums,int prev1){
        
        if(idx>=nums.size())return 1 ;
        int ans=0;
        if(dp[idx][prev1]!=-1)return dp[idx][prev1];
        int prev2=(idx>0)?(nums[idx-1]-prev1) : INT_MAX;
        for(int i=nums[idx];i>=prev1;i--){
            int diff=nums[idx]-(i);
            if(diff>prev2)break;
            ans=(ans+solve(idx+1,nums,i))%mod;
        }
       
        return dp[idx][prev1]=ans%mod;
    }
    int countOfPairs(vector<int>& nums) {
        int n=nums.size();
        memset(dp,-1,sizeof(dp));
       
        return solve(0,nums,0);
    }
};
