public class Solution {
    static int mod=1000000007;
   static int dp[][]=new int[1000+1][1000+1];
   static String s, sub;
    static int solve(int n,int m){
        if(m==0)return 1;
        else if(n==0)return 0;
        if(dp[n][m]!=-1)return dp[n][m];
        int ans=0;
        if(s.charAt(n-1)==sub.charAt(m-1))
              ans=solve(n-1,m-1)%mod;
        ans=(ans+solve(n-1,m))%mod;
    
        return dp[n][m]=ans;
    }
    public static int distinctSubsequences(String str, String sb) {
        for(int i=0;i<=1000;i++){
            for(int j=0;j<=1000;j++){
                dp[i][j]=-1;
            }
        }
        s=str;sub=sb;
      return solve(str.length(),sb.length());
    }
}
