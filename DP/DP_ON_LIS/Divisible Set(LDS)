import java.util.*;
public class Solution {
    public static List< Integer > divisibleSet(int []arr) {
       List<Integer>ans=new ArrayList<>();
       Arrays.sort(arr);
    //    int dp[]=new int[arr.length];
    //    int path[]=new int[arr.length];
    //    int idx=0;
       
    //    for(int i=0;i<arr.length;i++){
    //        for(int j=i;j>=0;j--){
    //            if(arr[i]%arr[j]==0 && (dp[i]<dp[j]+1)){
    //                dp[i]=dp[j]+1;
    //               path[i]=j;
                  
    //            }
              
    //        }
    //         if(dp[i]>dp[idx])idx=i;

    //    }
        
        
       
    //    while(path[idx]!=idx){
    //        ans.add(arr[idx]);
    //        idx=path[idx];
    //    }
    //    ans.add(arr[idx]);
       

       int max=1;
       List<Integer>temp=new ArrayList<>();
       for(int i=0;i<arr.length;i++){
           ans=new ArrayList<>();
           max=1;
           for(int j=0;j<arr.length;j++){
               if((arr[i]%arr[j]==0 || arr[j]%arr[i]==0 )&& arr[j]%max==0)
                {   ans.add(arr[j]);max=arr[j];}
            }
             
            if(ans.size()>temp.size())temp=ans;
        }
       
        return temp;




      
    }
}
