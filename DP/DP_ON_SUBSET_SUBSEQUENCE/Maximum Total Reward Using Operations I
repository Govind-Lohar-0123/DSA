class Solution {
    // HashMap<String,Integer>map=new HashMap<>();
    int dp[][]=null;
    // int solve(int i,int sum,int arr[]){
    //    if(sum>arr[arr.length-1])return sum;
    //    if(i>=arr.length)return sum;
    //    if(dp[i][sum]!=-1)return dp[i][sum];
    //     int ans=0;
    //     if(arr[i]>sum)ans=solve(i+1,sum+arr[i],arr);
    //     return dp[i][sum]=Math.max(ans,solve(i+1,sum,arr));
    // }
    int solve(int i,int sum,int arr[]){
       
    //    if(i>=arr.length)return 0;
    //    if(dp[i][sum]!=-1)return dp[i][sum];
    //     int ans=0;
    //     if(arr[i]>sum)ans=arr[i]+solve(i+1,sum+arr[i],arr);
    //     return dp[i][sum]=Math.max(ans,solve(i+1,sum,arr));
       
       int next[]=new int[4000+1];
       for(i=arr.length-1;i>=0;i--){
        int curr[]=new int[4000+1];
            for(int j=0;j<4001;j++){
                int ans=0;
                if(arr[i]>j)ans=arr[i]+next[j+arr[i]];
                curr[j]=Math.max(ans,next[j]);
            }
            next=curr;
       }
       return next[0];

    }
    public int maxTotalReward(int[] rv) {
        Arrays.sort(rv);
        int n=rv.length;
        dp=new int[n+1][4001];
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<4000+1;j++){
        //         dp[i][j]=-1;
        //     }
        // }
        return solve(0,0,rv);
    }
}
