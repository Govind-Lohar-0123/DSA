class Solution {

    
    
    int solve(int i,int arr[],HashMap<Integer,Integer>map,int k){
        if(i>=arr.length){
            return 1;
        }
          
        int ans=0;
        if(map.containsKey(Math.abs(arr[i]-k))==false && map.containsKey(Math.abs(arr[i]+k))==false){
            map.put(arr[i],map.getOrDefault(arr[i],0)+1);
            ans=solve(i+1,arr,map,k);
            if(map.get(arr[i])==1)map.remove(arr[i]);
            else map.put(arr[i],map.get(arr[i])-1);
             
        }
        ans+= solve(i+1,arr,map,k);
       return ans;
    }
    public int beautifulSubsets(int[] nums, int k) {
       
        return solve(0,nums,new HashMap<>(),k)-1;
    }
}
