class Solution {
    static int dp[][]=null;

    public int minPathSum(int[][] grid) {
        	// Write your code here.
        int n=grid.length;
        int m=grid[0].length;
            dp=new int[n][m];
            for(int i=0;i<n;i++){
                for(int j=0;j<m;j++){
                    dp[i][j]=-1;
                }
            }

        return minPath(grid.length-1,grid[0].length-1,grid);
    }


    static int minPath(int n,int m,int grid[][]){
        if(n==0&&m==0)return grid[0][0];
        if(n<0||m<0)return 1000000;
        if(dp[n][m]!=-1)return dp[n][m];
        return dp[n][m]=Math.min(minPath(n-1,m,grid)+grid[n][m],minPath(n,m-1,grid)+grid[n][m]);
    
    }
}
