class Solution {
public:
    vector<int> maximumSubarrayXor(vector<int>& nums, vector<vector<int>>& q) {
        int n=nums.size();
        vector<vector<int>>dp(n,vector<int>(n,0));
        

        for(int len=0;len<n;len++){
            for(int i=0;i+len<n;i++){
                 int j=i+len;
                if(len==0)dp[i][i]=nums[i];
                else dp[i][j]=(dp[i][j-1] ^ dp[i+1][j]);
            }
        }
        for(int len=1;len<n;len++){
            for(int i=0;i+len<n;i++){
                int j=i+len;
                dp[i][j]=max({dp[i][j-1],dp[i][j],dp[i+1][j]});
            }
        }
        vector<int>ans;
        for(vector<int> &it : q){
            int l=it[0],r=it[1];
            ans.push_back(dp[l][r]);
        }
        return ans;
    }
};
