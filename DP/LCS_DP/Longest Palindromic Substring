class Solution {
   int  dp[][]=null;
    int solve(String s,int i,int j){
        if(i>=j)return 1;
        if(dp[i][j]!=-1)return dp[i][j];
        int ans=(s.charAt(i)==s.charAt(j))?1:0;
        if(s.charAt(i)==s.charAt(j))
            ans=Math.min(ans,solve(s,i+1,j-1));
        
        return dp[i][j]=ans;
    }

    public String longestPalindrome(String s) {
        int n=s.length();
        dp=new int[n+1][n+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=n;j++){
                dp[i][j]=-1;
            }
        }
       String ans="";
        String temp="";
        for(int i=0;i<s.length();i++){
            temp="";
            for(int j=i;j<s.length();j++){
                temp+=s.charAt(j);
                if(solve(s,i,j)==1 && temp.length()>ans.length())
                  {
                      ans=temp;
                  }  
                
            }
        }
        return ans;

    }
}
