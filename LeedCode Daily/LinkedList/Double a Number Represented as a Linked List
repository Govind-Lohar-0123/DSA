/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode reverse(ListNode head){
        ListNode prev=null;
        ListNode curr=head;
        while(curr!=null ){
            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    public ListNode doubleIt(ListNode head) {
        ListNode prev=null;
        ListNode curr=reverse(head);

        int carry=0;
        while(curr!=null ){
            ListNode next=curr.next;
            int sum=(curr.val*2)+carry;
            curr.val=sum%10;
            carry=sum/10;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        if(carry==1){
            ListNode newNode=new ListNode(1);
            newNode.next=prev;
            prev=newNode;
        }
       return prev;
    }
}
