class Solution {
  public:
  vector<vector<int>> mergeOverlap(vector<vector<int>>& arr) {
    
        vector<vector<int>>ans;
        int idx=0;
        
        for(int i=1;i<arr.size();i++){
        
            if(arr[idx][1]>=arr[i][0]){
                arr[idx][1]=max(arr[idx][1],arr[i][1]);
            }
            else arr[++idx]=arr[i];
        }
        for(int i=0;i<=idx;i++){
            ans.push_back(arr[i]);
        }
        return ans;
        
    }
    vector<vector<int>> insertInterval(vector<vector<int>> &arr,
                                       vector<int> &t) {
                                           
        int n=arr.size();
        vector<vector<int>>ans;
        bool flag=false;
        for(int i=0;i<n;i++){
            if(arr[i][0]>t[0] && flag==false){
                ans.push_back(t);
                flag=true;
                
            }
            else if(arr[i][0]==t[0] && arr[i][1]>=t[1] && flag==false){
                ans.push_back(t);
                flag=true;
            }
            
            ans.push_back(arr[i]);
    
            
        }
        if(flag==false)ans.push_back(t);
        return mergeOverlap(ans);
        
    }
};
