using P = pair<int, int>;

class Solution {
public:
    int activitySelection(vector<int> &start, vector<int> &finish) {
        int n = start.size();
        vector<P> temp;

        for (int i = 0; i < n; i++) {
            temp.push_back({start[i], finish[i]});
        }

        // Corrected sorting
        sort(temp.begin(), temp.end(), [](const P &a, const P &b) {
            if(a.second>=b.second)return false;  // Correct comparison
            return true;
            
        });

        int ans = 0;
        int lastTime = 0;

        for (int i = 0; i < n; i++) {
            if (lastTime < temp[i].first) {
                ans++;
                lastTime = temp[i].second;
            }
        }
        return ans;
    }
};
