class Solution {
  public:
    int kthElement(vector<int>& arr1, vector<int>& arr2, int k) {
        int n1=arr1.size();
        int n2=arr2.size();
        if(n1>n2)return kthElement(arr2,arr1,k);
        int n=(n1+n2);
        int median=k;
        int l=max(0,k-n2),r=min(k,n1);
        while(l<=r){
            int mid=(l+r)>>1;
            int rem=(median-mid);
            int l1=((mid==0)?INT_MIN : arr1[mid-1]) ;
            int l2=((rem==0)?INT_MIN : arr2[rem-1]) ;
            int r1=((mid>=n1)?INT_MAX : arr1[mid]) ;
            int r2=((rem>=n2)?INT_MAX : arr2[rem]);
            if((l1<=r2) && (l2<=r1)){
               return max(l1,l2);
                
            }
            else if(l1>r2)r=mid-1;
            else l=mid+1;

        }
        return -1;
        
    }
};
