/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode curr1=l1;
        ListNode curr2=l2;
        int carry=0;
        ListNode ans=new ListNode(0);
        ListNode temp=ans;
        while(curr1!=null || curr2!=null){
            int val1=(curr1!=null)?curr1.val:0;
            int val2=(curr2!=null)?curr2.val:0;
            int sum=val1+val2+carry;
            carry=sum/10;
            if(curr1!=null){
                temp.next=curr1;
                curr1=curr1.next;
            }
            if(curr2!=null){
                temp.next=curr2;
                curr2=curr2.next;
            }
            temp.next.val=sum%10;
            temp=temp.next;
        }
        if(carry==1){
            ListNode newNode=new ListNode(1);
            temp.next=newNode;

        }
        return ans.next;

    }
}
