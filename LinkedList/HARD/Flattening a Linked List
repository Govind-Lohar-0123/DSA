Approaches:-
1]Simple Array with sort
2]with likedlist sort
3]heap sort by add node in heap
4]while loop n*n*n
5]recursio n*n*m   o(N)

ass GfG {
    Node solve(Node head){
        if(head==null || head.next==null)return head;
        Node temp=solve(head.next);
        return merge(head,temp);
    }
    Node merge(Node a,Node b){
        Node res=null;
        if(a==null)return b;
        if(b==null)return a;
        if(a.data<=b.data)
        {   res=a;
            res.bottom=merge(a.bottom,b);
        }
       else 
        {   res=b;
            res.bottom=merge(a,b.bottom);
        }
        return res;
    }
    Node flatten(Node root) {
       return solve(root);
    }
}
