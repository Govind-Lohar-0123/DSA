class Solution {
    public int minOperations(int[] arr) {
        int ans=0;
        int k=3;
        int flip=0;
        int n=arr.length;
        // for(int i=0;i<n;i++){
        //     if(i>=k && arr[i-k]==2)flip--;
        //     if(flip%2==arr[i]){
        //         if(i+k>n)return -1; 
        //         ans++;
        //         flip++;
        //         arr[i]=2;
        //     }
        // }
        ArrayDeque<Integer> q=new ArrayDeque<>();
        for(int i=0;i<n;i++){
            if(i>=k && q.pollFirst()==1)flip--;
            if(flip%2==arr[i]){
                if(i+k>n)return -1; 
                ans++;
                flip++;
                q.offerLast(1);
            }
            else q.offerLast(0);
        }
        return ans;

    }
}
