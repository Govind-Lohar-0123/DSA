class Solution {
    public int leastInterval(char[] tsk, int n) {
        int map[]=new int[26];
        for(int i=0;i<tsk.length;i++){
            map[tsk[i]-'A']++;
           
        }
         
        PriorityQueue<Integer>pq=new PriorityQueue<>(Collections.reverseOrder());
        for(int i=0;i<26;i++){
            if(map[i]>0)pq.add(map[i]);
        }
       int ans=0;
      
        
        
        while( pq.size()!=0){
            ArrayList<Integer>temp=new ArrayList<>();
            for(int i=1;i<=n+1;i++){
                if(pq.size()!=0){
                    int freq=pq.remove();
                    freq--;
                    temp.add(freq);
                    
                }
            }
            for(int freq : temp){
                if(freq>0)pq.add(freq);
            }
            if(pq.size()==0)ans+=temp.size();
            else ans+=n+1;

            
        }
        return ans;
    }   
}
