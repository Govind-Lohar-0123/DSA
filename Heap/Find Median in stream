class Solution {
  public:
    vector<double> getMedian(vector<int> &arr) {
        priority_queue<int,vector<int>,greater<int>>minPq;
        priority_queue<int>maxPq;
        
        vector<double>ans;
        for(int it : arr){
            
            if(maxPq.size()==0 || (maxPq.top()>=it))
                maxPq.push(it);
            else minPq.push(it);
            
            if(minPq.size()>maxPq.size())
            {
                maxPq.push(minPq.top());
                minPq.pop();
            }
            
            else if((maxPq.size() - minPq.size())>=2){
                minPq.push(maxPq.top());
                maxPq.pop();
            }
            
            int n=minPq.size() + maxPq.size();
            if(n%2==0){
                ans.push_back((minPq.top() + maxPq.top())/(double)2);
            }
            else ans.push_back(maxPq.top());
        }
        return ans;
        
    }
};
