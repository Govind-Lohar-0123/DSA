1]with stack
2]without stack
3]left cout of b and right cout of a both add for each i and take minimum except curr index
[a,b,a,b,b,a,a]
idx->0 b->0 ,a->3 =>3
idx->1 b->0 ,a->3 =>3
idx->2 b->1 , a->2 =>3
for all i take minim from them

#include <bits/stdc++.h>
class Solution {
public:
    int minimumDeletions(string s) {
        int n=s.length();
        int freq[n];
        fill_n(freq,n,0);
       
      
        int i=-1;
        int ans=0;
        int j=0;
        while(j<n){
            while(j<n && i!=-1 && s[j]=='a' && s[i]=='b'){
                ans++;
                i--;
                j++;
            }
            if(j<n)s[++i]=s[j];
            j++;
        }
        return ans;
    }
};
#include <bits/stdc++.h>
class Solution {
public:
    int minimumDeletions(string s) {
        int n=s.length();
        int freq[n];
        fill_n(freq,n,0);
       
      
        stack<int>st;
        int ans=0;
        int j=0;
        while(j<n){
            while(j<n && st.size()!=0 && s[j]=='a' && s[st.top()]=='b'){
                ans++;
                st.pop();
                j++;
            }
            if(j<n)st.push(j);
            j++;
        }
        return ans;
    }
};
