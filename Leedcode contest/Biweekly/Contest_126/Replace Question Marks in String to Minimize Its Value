 /// yaha time ki problem hai          
class Solution {
    class Pair{
        char ch;
        int freq;
        Pair(char ch,int f){
            this.ch=ch;this.freq=f;
        }
    }
     public String minimizeStringValue(String s) {
        PriorityQueue<Pair> pq=new PriorityQueue<>(new Comparator<Pair>(){
            public int compare(Pair a,Pair b){
                if(a.freq==b.freq)return a.ch-b.ch;
                return a.freq-b.freq;
            }
        });
        HashMap<Character,Integer>map=new HashMap<>();
        
        for(int i=0;i<s.length();i++){
            map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
        }
        for(char i='a';i<='z';i++){
            if(map.containsKey(i)){
                pq.add(new Pair(i,map.get(i)));
            }
            else pq.add(new Pair(i,0));
        }

        String ans="";
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            if(ch=='?'){
                Pair it=pq.remove();
                ans+=it.ch;
                it.freq++;
                pq.add(it);
            }
            
        }
        String an="";
        char ch[]=ans.toCharArray();
        Arrays.sort(ch);int idx=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='?')an+=ch[idx++];
            else an+=s.charAt(i);
        }
        

        return an;
     }


    // public String minimizeStringValue(String s) {
    //     /// yaha time ki problem hai
    //     HashMap<Character,Integer>map=new HashMap<>();
    //     String ans="";
    //     String temp="";
    //      for(int i=0;i<s.length();i++){ //O(N)
    //          map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
    //      }
    //     for(int i=0;i<s.length();i++){ //O(N)
            
    //         char ch=s.charAt(i);
    //         if(s.charAt(i)=='?'){
    //              ch='a';
    //             for(char j='a';j<='z';j++){ 26
    //                 if(map.containsKey(j)==false){
    //                     ch=j;
    //                     break;
    //                 }
    //                 else if(map.get(j)<map.get(ch))
    //                     ch=j;
    //             }
    //            map.put(ch,map.getOrDefault(ch,0)+1);
    //             temp+=ch;
    //         }
         
    //     }
    //     char charArr[]=temp.toCharArray();
    //     Arrays.sort(charArr);int idx=0; //O(N)log(N)
    //     for(int i=0;i<s.length();i++){
    //         if(s.charAt(i)=='?')ans+=charArr[idx++];         //why is problem because time complexity is 
    //         else ans+=s.charAt(i);
    //     }
    //     return ans;
    // }
}
