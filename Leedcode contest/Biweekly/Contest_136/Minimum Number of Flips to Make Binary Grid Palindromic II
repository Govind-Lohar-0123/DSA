class Solution {
public:
    int minFlips(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int ans=0;
        // for diivisble by fou and minimim
       for(int i=0;i<n/2;i++){ //n/2
       
            for(int j=0;j<m/2;j++){ //m/2
                int x=0;
                x+=grid[i][j];
                x+=grid[i][m-j-1];
                x+=grid[n-i-1][m-j-1];
                x+=grid[n-i-1][j];
                ans+=min(x,4-x);
            }
       }
       
       //to check for odd number of cols
       int pair=0;
       int cnt=0;
       if(m%2==1){
            for(int i=0;i<n/2;i++){ 
                if(grid[i][m/2]==grid[n-i-1][m/2] && grid[i][m/2]==1)pair++;
                if(grid[i][m/2]!=grid[n-i-1][m/2]){
                    cnt++;ans++;
                }

            }
       }
       // to cjeck for rows
       if(n%2==1){
            for(int i=0;i<m/2;i++){
                if(grid[n/2][i]==grid[n/2][m-i-1] && grid[n/2][i]==1)pair++;
                if(grid[n/2][i]!=grid[n/2][m-i-1]){
                    cnt++;ans++;
                }

            }
       }
       if(pair%2==1 && cnt==0)ans+=2;
       if(n%2==1 && m%2==1 && grid[n/2][m/2]==1)ans++;
       return ans;


    }
};