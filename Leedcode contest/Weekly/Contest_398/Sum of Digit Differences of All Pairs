class Solution {
    HashMap<Integer,HashMap<Integer,Integer>>map=new HashMap<>();

    void mapping(int nums[]){
        for(int i=0;i<nums.length;i++){
            int n=nums[i];
            for(int j=0;(n!=0);j++){
                int val=n%10;
                n/=10;
                if(map.containsKey(j)==false)
                    map.put(j,new HashMap<Integer,Integer>());
                map.get(j).put(val,map.get(j).getOrDefault(val,0)+1);
            }
        }
        
        
    }
    public long sumDigitDifferences(int[] nums) {
        long ans=0;
        mapping(nums);
        for(int i=0;i<nums.length;i++){
            int n=nums[i];
            for(int j=0;(n!=0);j++){
                int val=n%10;
                n/=10;
                int cnt=map.get(j).get(val);
                map.get(j).put(val,map.get(j).get(val)-1);

                ans+=((nums.length-i)-cnt);
            }
        }
        return ans;
    }
}
