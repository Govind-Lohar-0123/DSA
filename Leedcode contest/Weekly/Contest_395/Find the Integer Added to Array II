class Solution {
    int getCount(int nums1[],int nums2[],int mid){
        int count=0;int j=0;int i=0;
        for( i=0;i<nums1.length && j<nums2.length;i++){
            if(nums1[i]+mid<nums2[j]){count++;}
            else if(nums1[i]+mid>nums2[j] || count>2)return 0;
            else j++;
        }
        if(j>=nums2.length)return count+(nums1.length-i); 
        return count;
    }
    public int minimumAddedInteger(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int ans=10000;
        int left=-1000,right=1000;
        while(left<=right){
            int mid=(left+right)/2;
            int count=getCount(nums1,nums2,mid);
            if(count==2){
                ans=Math.min(ans,mid);
                right=mid-1;
            }
            else if(count>2)left=mid+1;
            else right=mid-1;
        }
    return ans;

        // int dis=0,ans=Integer.MAX_VALUE; int idx=0;
        // boolean flag=false;
        // for(int i=0;i<nums1.length;i++){
        //     for(int j=i+1;j<nums1.length;j++){
        //         flag=false;idx=0;
        //         for(int k=0;k<nums1.length;k++){
        //             if(k==i || k==j)continue;
        //             else {
        //                 if(flag==false){dis=nums2[idx]-nums1[k];flag=true;}
        //                 if(dis!=nums2[idx++]-nums1[k]){ flag=false;break;}
        //             }
                   
        //         }
               
        //         if(flag)ans=Math.min(ans,dis);
        //     }
        // }
        // return ans;
    }
}
