1]
Simple dfs to count number of pair
and for each el 

class Solution {
    int cnt=0;
    void dfs(ArrayList<ArrayList<int []>>grid,int u,int par,int sum,int sl){
        if(sum%sl==0)cnt++;
        
        for(int []v : grid.get(u)){
            if(v[0]==par)continue;
            dfs(grid,v[0],u,v[1]+sum,sl);
        }
    }
    public int[] countPairsOfConnectableServers(int[][] edges, int signalSpeed) {
        ArrayList<ArrayList<int []>>grid=new ArrayList<>();
        for(int i=0;i<edges.length+1;i++){
            grid.add(new ArrayList<>());
        }
        for(int it [] : edges){
            grid.get(it[0]).add(new int[]{it[1],it[2]});
            grid.get(it[1]).add(new int[]{it[0],it[2]});
        }
        int n=edges.length+1;
        int res[]=new int[edges.length+1];
        for(int u=0;u<n;u++){
            int ans=0;
            int sum=0;
            
            for(int v[] : grid.get(u)){
                cnt=0;
                dfs(grid,v[0],u,v[1],signalSpeed);
                ans+=(sum*cnt);
                sum+=cnt;
            }
            res[u]=ans;
        }
        return res;
    }
}
