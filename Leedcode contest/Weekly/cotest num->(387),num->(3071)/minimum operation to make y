class Solution {
    
    int solve(int grid[][],int x,int y){
        int ans=0;
        int n=grid.length;
        int m=grid[0].length;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if((i<=n/2 && (i==j || (i+j)==n-1)) || (i>n/2 && j==n/2))
                {   if(grid[i][j]!=x)ans++;}
                else if(grid[i][j]!=y)ans++;
            }
        }
        return ans;
       
    }
    
    
    
    
        //     int greater(int arr[]){

        //         int idx=0;
        //         for(int i=0;i<3;i++){
        //             if(arr[idx]<arr[i])idx=i;
        //         }
        //         return idx;
        //     }
    
    public int minimumOperationsToWriteY(int[][] grid) {
        
        return Math.min(solve(grid,1,0),Math.min(solve(grid,1,2),
        Math.min(solve(grid,0,1),Math.min(solve(grid,0,2),
        Math.min(solve(grid,2,1),solve(grid,2,0))))));
        
        

                // int a[]=new int[3];
        //         int b[]=new int[3];
        //         int n=grid.length;
        //         int m=grid[0].length;

        //         for(int i=0;i<n;i++){
        //             for(int j=0;j<m;j++){

        //                 if((i<=n/2 && (i==j || (i+j)==n-1)) || (i>n/2 && j==n/2)){

        //                     if(grid[i][j]==1)b[1]++;
        //                     else if(grid[i][j]==2)b[2]++;
        //                     else b[0]++;
        //                 }
        //                 else {
        //                     if(grid[i][j]==1)a[1]++;
        //                     else if(grid[i][j]==2)a[2]++;
        //                     else a[0]++;
        //                 }
        //             }
        //         }

        //         int ans=0;
        //         int x=greater(a);

        //         int sum=a[0]+a[1]+a[2];

        //         ans+=sum-a[x];
        //         int y=greater(b);
        //         sum=b[0]+b[1]+b[2];
        //         if(x!=y)ans+=sum-b[y];
        //         else {
        //             b[y]=-1;
        //             y=greater(b);
        //             ans+=sum-b[y];
        //         }
        //         return ans;

    }
}
