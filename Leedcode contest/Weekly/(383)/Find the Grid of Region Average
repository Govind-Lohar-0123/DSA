
class Solution {
    
    void fillAverage(ArrayList<Integer>[][]res,int sum,int i,int j){
        for(int k=i;k<3+i;k++){
            for(int l=j;l<3+j;l++){
                if(res[k][l]==null)
                    res[k][l]=new ArrayList<Integer>();
               res[k][l].add(sum/9);
           }           
        }
    }
    
    public int[][] resultGrid(int[][] grid, int th) {
        
        int n=grid.length;
        int m=grid[0].length;
        ArrayList<Integer> [][]res=new ArrayList[n][m];
        //
        int sum=0;
        for(int j=0;j<=m-3;j++){
            for(int i=0;i<=n-3;i++){
                boolean flag=false;
                sum=0;
                for(int k=i;k<3+i;k++){
                    for(int l=j;l<3+j;l++){
                        sum+=grid[k][l];
                        //check adjcent upward
                        if(k>i && Math.abs(grid[k-1][l]-grid[k][l])>th)
                            flag=true;
                        else if(l>j && Math.abs(grid[k][l-1]-grid[k][l])>th)
                            flag=true;
                        
                        if(flag)break;
                        
                    }
                } 
                if(flag)continue;
               System.out.print(sum+" ");
                fillAverage(res,sum,i,j);
                
            }
        }
        
        
      
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(res[i][j]==null)continue;
                int len=res[i][j].size();
                 sum=0;
                for(int it : res[i][j]){
                    // System.out.print(it+" ");
                    sum+=it;
                }
                grid[i][j]=sum/len;
            }
        }
        return grid;
        
        
        
    }
}
