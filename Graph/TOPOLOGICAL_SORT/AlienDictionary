//Stuck 
a b c
a b

 for this you return ""

class Solution {
  public:
  
    
    string findOrder(vector<string> &word) {
        int n=word.size();
        unordered_map<char ,unordered_set<char>>graph;
        int size=0;
        int ind[26]={0};
        int map[26]={0};
        for(const string &s : word){
            for(int ch : s){
                
                map[ch-'a']++;
                if(map[ch-'a']==1)size++;
            }
        }
        
        for(int i=0;i<n-1;i++){
           
            int j=0;
            int n1=word[i].size();
            int n2=word[i+1].size();
            int m=min(n1,n2);
            while(j<m && word[i][j]==word[i+1][j])j++;
            if(j<n1 && j < n2)graph[word[i][j]].insert(word[i+1][j]);
            else if(j<n1)return ""; // i stucj there
            
        }
        
        for(const auto&it : graph){
            auto&k=it.first;
            auto&v=it.second;
            for(char ch : v){
               ind[ch-'a']++;
            }
        }
         queue<char>q;
        for(int i=0;i<26;i++){
            
            if(map[i]>0 && ind[i]==0)q.push(char(i + 'a'));
        }
        
        string ans="";
        while(q.size()!=0){
            char u=q.front();q.pop();
            
            ans.push_back(u);
            
            for(char v  :  graph[u]){
                ind[v-'a']--;
                if(ind[v-'a']==0)q.push(v);
            }
        }
   
        
        if(ans.size()==size)return ans;
        return  "";
        
        
    }
