class DisjointSet{
    int [] par,rank;
    int components;
    DisjointSet(int n){
        components=n;
        par=new int[n+1];
        rank=new int[n+1];
        for(int i=0;i<n;i++){
            par[i]=i;
            rank[i]=1;
        }
    }
    public int getPar(int u){
        if(par[u]==u)return u;
        return par[u]=getPar(par[u]);
    }
    public void unionByRank(int u,int v){
        int up=getPar(u);
        int vp=getPar(v);
        if(up==vp)return ;
        if(rank[up]==rank[vp]){
            par[vp]=up;
            rank[up]++;
        }
        else if(rank[up]>rank[vp])par[vp]=up;
        else par[up]=vp;
        components--;
    }
}


class Solution {
    public boolean equationsPossible(String[] equations) {
        DisjointSet ds=new DisjointSet(26);
        for(String it : equations){
            if(it.charAt(1)!='!')ds.unionByRank(it.charAt(0)-'a',it.charAt(3)-'a');
        }
        for(String it : equations){
            if(it.charAt(1)=='!'){
                int x=it.charAt(0)-'a';
                int y=it.charAt(3)-'a';
                if(ds.getPar(x)==ds.getPar(y))return false;
            }
        }
        return true;
       
    }
}
