class Solution {
    int nums[]=null;
    int ansVal[]=null;
    ArrayList<ArrayList<HashMap<Integer,Integer>>> map= new ArrayList<>();
    int solve(int i,int j,int andOp){
        if(i>=nums.length){
            if(j>=ansVal.length)return 0;
            return (int)1e9;
        }
      
        if(j>=ansVal.length)return (int)1e9;
          if( map.get(i).get(j).containsKey(andOp)){
             return map.get(i).get(j).get(andOp);
          }
        int take=(int)1e9;
        if((andOp & nums[i])==ansVal[j]){
            take= solve(i+1,j+1,(1<<17)-1)+nums[i]; 
        }
        int ans=Math.min(take,solve(i+1,j,(andOp & nums[i])));
    
        map.get(i).get(j).put(andOp,ans);  
        return ans; 
    }
    public int minimumValueSum(int[] nums, int[] andValues) {
        map= new ArrayList<>();
        this.nums=nums;
        this.ansVal= andValues;
        for(int i=0;i<100000+1;i++){
            map.add(new ArrayList<>());
            for(int j=0;j<11;j++){
                map.get(i).add(new HashMap<Integer,Integer>());
            }
        }
        
        

        



        int ans=solve(0,0,((1<<17)-1));
        System.out.print(map);
        if(ans==(int)1e9)return -1;
        return ans;
    }
}
