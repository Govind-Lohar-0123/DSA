/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    HashMap<Integer,ListNode>map=new HashMap<>();
    void deleteNode(ListNode start,ListNode end,int sum){
        
        // System.out.print(start+" "+end);
        while(start!=end){
            sum+=start.val;
            map.remove(sum);
            start=start.next;
        }
    }
    public ListNode removeZeroSumSublists(ListNode head) {
        
        ListNode curr=head;
        int sum=0;
        ListNode newNode=new ListNode(0);
        head=newNode;
      
        head.next=curr;
        map.put(0,head);

        
        while(curr!=null){
            sum+=curr.val;
            if(map.containsKey(sum)){
                ListNode temp=map.get(sum);
                
                deleteNode(temp.next,curr,sum);
                
                temp.next=curr.next;
            }
            else map.put(sum,curr);
           curr=curr.next;
           
        }
    
        return head.next;
    }
}
